import { BigNumber, ethers } from "ethers";

export type UserOpReceipt = {
    userOpHash: string;
    entryPoint: string;
    sender: string;
    nonce: number;
    paymaster: string;
    actualGasCost: BigNumber;
    actualGasUsed: BigNumber;
    success: "true" | "false";
    reason: string;
    logs: Array<ethers.providers.Log>; // The logs generated by this UserOperation (not including logs of other UserOperations in the same bundle)
    receipt: ethers.providers.TransactionReceipt;
};

// review
export type UserOpStatus = {
    state: string; // for now // could be an enum
    transactionHash?: string;
    userOperationReceipt?: UserOpReceipt;
};

export type UserOpResponse = {
    userOpHash: string;
    wait(_confirmations?: number): Promise<UserOpReceipt>;
    // Review: waitForTxHash(): vs waitForTxHash?():
    waitForTxHash(): Promise<UserOpStatus>;
};